@use './variables';
@use './tokens/spaces';
@use './tokens/radius';
@use "sass:map";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    color: var(--gray-900);
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
    font-family: Ubuntu;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: separate;
	border-spacing: 0;
}
*, *::after, *::before {
    box-sizing: border-box;
}
body {
    font-size: var(--font-size-200);
}


@mixin colorsTheme($color, $theme){
    @each $size , $value in  map-get(variables.$variables, colors, $color){
        $value: map-get($value, sets, $theme, value);
        --#{''+$color}-#{$size}: #{$value};
    }
};

@mixin spaceSize(){
    @each $key, $value in map-get(variables.$variables, rounded, text, side-padding) {
        $value: map-get($value, sets, desktop, value);
        --#{'space'}-#{'size'}-#{$key}: #{$value}
    }
};

@mixin fontSize(){
    @each $key, $value in map-get(variables.$variables, font, size) {
        $value: map-get($value, sets, desktop, value);
        --#{'font'}-size-#{$key}: #{$value};
    }
};
@mixin minSize() {
    @each $key, $value in map-get(variables.$variables, rounded, min-size) {
        $value: map-get($value, sets, desktop, value);
        --#{'min'}-height-#{$key}: #{$value};
        --#{'min'}-width-#{$key}: calc(#{$value} * 10);
    }
}

:root {
    @include colorsTheme(gray, light);
    @include fontSize();
    @include minSize();
    @include spaceSize();

}
//document.body.setAttribute('data-theme', 'light')
[data-theme="light"] {
    @include colorsTheme(gray, light)
}
//document.body.setAttribute('data-theme', 'dark')
[data-theme="dark"] {
    @include colorsTheme(gray, dark)
}
job-attribute-component {
    display: inline-block;
    font-weight: bold;
}
tab-control {
    position: relative;
    border-bottom: 3px solid var(--gray-400);
}
tab-label {
    padding: 8px 4px
}
dropdown-wrapper[show=''] {
    display: inline-block;
}
dropdown-wrapper[show=''] > dropdown-content {
    visibility: visible;
}
dropdown-content {
    position: absolute;
    visibility: hidden
}

map-route-list {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1em;
    row-gap: 1em;
    margin-block-start: 1em;
}
map-route {
    border: 1px solid black;
    border-radius: 1em;
    padding: .5em;
}
map-route > div:first-child {
    height: 350px;
    width: 350px;
}
job-table > table {
    min-width: 350px
}
resolve-button > button {
    background-color: #1976d2;
    color: var(--gray-100);
    border: 1px solid var(--gray-300);
    border-radius: 16px;
    font-weight: bold;
    box-shadow: 0 2px 4px rgb(0 0 0 / 0%);
}
button:hover {
    box-shadow: 0 2px 4px rgb(0 0 0 / 30%);
}
button:active {
    box-shadow: 0 2px 4px rgb(0 0 0 / 15%);
}
form {
    width: fit-content;
}
table {
    border-radius: 8px
}
th {
    font-weight: bold;
}
th {
    padding: .5em 1em;
}
td {
    padding: 0.25em .5em;
    vertical-align: middle;
}
tbody > tr > td {
    border-bottom: 1px solid var(--gray-400);
}
tbody > tr:first-child > td {
    border-top: 1px solid var(--gray-400);
}
tbody > tr > td:first-child {
    border-left: 1px solid var(--gray-400);
}
tbody > tr > td:last-child {
    border-right: 1px solid var(--gray-400);
}
tbody > tr > td:not(:last-child) {
    border-right: 1px solid var(--gray-400);
}
tbody > tr:last-child :first-child {
    border-bottom-left-radius: 8px;
}
tbody > tr:last-child :last-child {
    border-bottom-right-radius: 8px;
}
tr:hover {
    background-color: rgba(0, 0, 0, .05);
}
.td-input {
    position: relative;
    padding: 0;
    min-width: 10em;
}
.td-input > div {
    position: absolute;
    display: inline-block;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: 0.25em .5em;
}
.td-input > div > input {
    font-size: .75em;
}

strong {
    font-weight: bold;
}
hr {    
    width: 95%;
    border-top: 1px solid var(--gray-500);
}
h1,h2,h3,h4,h5,h6 {
    line-height: 1.5em;
}
h1 {
    font-size: 2em;
}
h2{
    font-size: 1.5em;
}

h3 {
    font-size: 1.25em;
    font-weight: bold;
}
h4{
    font-size: 1em;
    font-weight: bold;
}
h5 {
    font-size: 0.875em;
    font-weight: bold;
}

.rootFont {
    font-size: 1rem;
}
.boldTitle {
    font-weight: bold;
}
.container {
    padding: 1em;
}
.mapContainer {
    padding: .75em;
    margin: .5em;
    box-shadow: 0 4px 8px rgb(0 0 0 / 30%);
    border-radius: .75em;
}
.fill {
    background-color: var(--gray-75);
}

.component {
    display: inline-block;
    margin-inline-end: 0.5em;
}

.content {
    display: block;
    margin-block-end: 0.5em;
}

.content:last-child {
    margin-block-end: 0;
}

.component:last-child {
    margin-inline-end: 0;
}

form.component {
    padding: 0;
}

.fill {
    background-color: var(--gray-75);
}
.quiet {
    background-color: rgba(0, 0, 0, .05);
    border: 1px solid var(--gray-400);
}
.quiet:hover {
    background-color:rgba(0, 0, 0, .125)
}

p {
    font-size: 0.875em;
}
label {
    font-size: 0.8em;
    font-weight: 500;
}


.title {
    display: block;
    margin-block-end: 0.25em;
}
.title:last-of-type {
    margin-block-start: 1em;
}

.hr {
    display: block;
    margin: 0;
    margin-block-end: 0.5em;
}

input[type=text], input[type=date], input[type=datetime-local],input[is=autocomplete-input]{
    display: block;
    width: 100%;
    height: 100%;
    padding: 0.325em .65em;
    border: 1px solid var(--gray-600);
    border-radius: 4px;
    background-color: var(--gray-50);
}
button, [type="button"], [type="reset"], [type="submit"] {
    padding: 0.5em 1em;
    border: 1px solid var(--gray-600);
    border-radius: 4px;
    background-color: var(--gray-50);
}
.deleteButton {
    background-color: #d32f2f;
    color: var(--gray-100);
    border: 1px solid var(--gray-300);
    border-radius: 16px;
}



ul {
    margin-inline-start: 0px;
}

.flex {
    display: flex;
}
.flex.space-b {
    justify-content: space-between;
}
.flex.space-a {
    justify-content: space-around;
}
.column {
    flex-direction: column;
}
.width-maxCont {
    width: max-content;
}

.list {
    
}
.list-item  {
    border-radius: 1px;
}
.list-item > :first-child {
    border-radius: 2px;
    padding: 8px 4px;
    align-items: center;
    border: 0.01em solid rgba(255,255,255,.1);
    background-color: transparent;
    transition: all 0.125s ease;
}
.list-item:hover > :first-child{
    background-color: var(--gray-300);
}



.dropdown {
    max-height: 0px;
    overflow: hidden;
    transition: all 0.275s linear;
}

.action-button {
    float: right;
}
.action-button.confirm {
    background-color: #4caf50;
    color: #004d40;
    font-weight: bold;
}
.action-button.undo {
    background-color: #f44336;
    color: #880e4f;
    font-weight: bold;
}
.action-button.delete {
    background-color: #d32f2f;
    color: var(--gray-100);
    border: 1px solid var(--gray-300);
}
.action-button.edit {
    background-color: var(--gray-100);
    color: var(--gray-900);
    border: 1px solid var(--gray-500);
}
.action-button:hover {
    box-shadow: 0 2px 4px rgb(0 0 0 / 30%);
}
.action-button:active {
    box-shadow: none;
}

.action-menu {
    display: flex;
    flex-direction: column;
    visibility: hidden;
    padding: 16px;
    background-color: var(--gray-75);
    border: 1px solid var(--gray-500);
    border-radius: 8px;
    position: absolute;
    margin-block-start: -36px;
    margin-inline-start: 36px;
    label {
    align-self: flex-start;
    }
    input[type='submit'] {
        background-color: #1976d2;
        color: var(--gray-100);
        border: 1px solid var(--gray-300);
        border-radius: 16px;
    }
    input {
        margin-block-end: 4px;
    }
    :last-child {
        margin-block-end: 0px;
    }
}
.action-menu[visible=''] {
    visibility: visible;
}

#resume, #jobControl, #jobTable {
    font-size: 0.875rem;
    //border-radius: 8px;
    box-shadow: 0 4px 8px rgb(0 0 0 / 30%);
}

.scheduleLabel {
    display: block;
    width: max-content;
    padding: 0 2px;
    text-align: start;
    position: relative;
    top: 0.5em;
    background-color: var(--gray-75);
}

.toggleButton {
    background-color: #1976d2;
    color: var(--gray-100);
    border: 1px solid var(--gray-300);
    border-radius: 16px;
}

#nav-content {
    transition: all 0.2s ease 0.1s
}

//<button class='action-button'>
// edit
//  <form class='action-menu'>
//      <input type="text" placeholder="ajouter un livreur">
//      <input type="submit" value="ok">
//  </form>
//</button>





//input[type='text'], input[type='datetime-local'] {
//    width: 16em;
//    height: 2.875em;
//    border: 1px solid var(--gray-600);
//    border-radius: 7px;
//}
//button, input[type='submit'], input[type='button'] {
//    padding: spaces.$space-inset-squish-s;
//    border: 1px solid var(--gray-600);
//    border-radius: 7px;
//    background-color: var(--gray-700);
//    color: var(--gray-100);
//}

// .container {
//     background-color: var(--gray-75);
//     margin: spaces.$space-inset-m;
// 
//     padding: spaces.$space-inset-m;  
//     border-radius: radius.$radius-m;
//     ul {
//         margin-inline-start: spaces.$space-m;
//         li > p {
//             margin-block-end: spaces.$space-stack-s;
//         }
//         h3, li {
//             display: block;
//             margin-block-end: spaces.$space-stack-m;
//             ul li:nth-child(n) {
//                 margin-block-end: spaces.$space-stack-s;
//             }
//             :last-child {
//                 margin-block-end: 0;
//             }
//         }
//         li:last-child {
//             margin-block-end: 0
//         }
//         ul li :nth-child(n) {
//                 margin-inline-end: spaces.$space-inline-s;
//                 display: inline;
//         }
//         ul li :last-child {
//             margin-inline-end: 0;
//         }
//         li > form {
//             display: flex;
//             :first-child {
//                 margin-inline-end: spaces.$space-inline-s;
//             }
//             :last-child {
//                 margin-inline-end: 0;
//             }
//         }
//     }
//     ul:first-child {
//         margin-inline-start: 0;
//     }
// }
// 
// 
